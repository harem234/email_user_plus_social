# Generated by Django 3.0.2 on 2020-01-23 11:19

from django.conf import settings
import django.contrib.sites.models
from django.db import migrations, models
import django.db.models.deletion
import social.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SocialProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social', models.CharField(choices=[(None, 'Select Provider'), ('google', 'Google'), ('github', 'Github'), ('sentinel', 'sentinel')], max_length=10, unique=True)),
                ('client_id', models.CharField(max_length=1000)),
            ],
            options={
                'verbose_name': 'Social Provider',
                'verbose_name_plural': 'Social Providers',
            },
        ),
        migrations.CreateModel(
            name='SocialAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_provider_identifier', models.CharField(max_length=1000)),
                ('is_connected', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=1000, null=True, unique=True)),
                ('provider', models.ForeignKey(on_delete=models.SET(social.models.get_sentinel_social_provider), to='social.SocialProvider')),
                ('site', models.ForeignKey(default=django.contrib.sites.models.SiteManager.get_current, on_delete=django.db.models.deletion.CASCADE, related_name='socialaccount_site', to='sites.Site')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='socialaccount_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Social Account',
                'verbose_name_plural': 'Social Accounts',
            },
        ),
        migrations.AddConstraint(
            model_name='socialaccount',
            constraint=models.UniqueConstraint(fields=('user', 'provider', 'site'), name='user have one account per provider and site'),
        ),
        migrations.AddConstraint(
            model_name='socialaccount',
            constraint=models.UniqueConstraint(fields=('social_provider_identifier', 'provider', 'site'), name='every social_provider_identifier per provider is unique for every site'),
        ),
    ]
